name: Daily MLB Report

on:
  schedule:
    # 毎日日本時間18:30に実行（UTCで09:30）
    - cron: '30 9 * * *'
  workflow_dispatch:  # 手動実行も可能

jobs:
  generate-report:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # 必要なパッケージをインストール
        pip install pandas numpy requests beautifulsoup4 pytz lxml
        # requirements.txtがあれば使用
        if [ -f requirements.txt ]; then 
          pip install -r requirements.txt
        fi
    
    - name: Create necessary directories
      run: |
        mkdir -p cache
        mkdir -p cache/splits_data
        mkdir -p cache/advanced_stats
        mkdir -p cache/bullpen_stats
        mkdir -p cache/batting_quality
        mkdir -p cache/recent_ops
        mkdir -p cache/statcast_data
        mkdir -p logs
        mkdir -p daily_reports
        mkdir -p src
        mkdir -p scripts
    
    - name: Debug - Show directory structure
      run: |
        echo "=== Directory Structure ==="
        ls -la
        echo ""
        echo "=== Scripts folder ==="
        ls -la scripts/
        echo ""
        echo "=== Python Path ==="
        python -c "import sys; print('\\n'.join(sys.path))"
    
    - name: Generate MLB Report
      env:
        PYTHONIOENCODING: utf-8
        PYTHONPATH: ${{ github.workspace }}
      run: |
        echo "🚀 Starting report generation..."
        echo "Current directory: $(pwd)"
        echo "Python version: $(python --version)"
        
        # mlb_complete_report_real.py を直接実行
        echo "Running mlb_complete_report_real.py..."
        python scripts/mlb_complete_report_real.py > daily_reports/report_$(date +%Y%m%d).txt 2>&1
        
        # 実行結果を確認
        if [ $? -eq 0 ]; then
          echo "✅ Report generated successfully!"
        else
          echo "⚠️ Report generation completed with warnings/errors"
        fi
        
        # レポートの存在確認
        if [ -f daily_reports/report_$(date +%Y%m%d).txt ]; then
          echo "📄 Report file created successfully"
          echo ""
          echo "=== Report Size ==="
          wc -l daily_reports/report_$(date +%Y%m%d).txt
          echo ""
          echo "=== Report Preview (first 50 lines) ==="
          head -n 50 daily_reports/report_$(date +%Y%m%d).txt
          echo ""
          echo "=== Report End (last 20 lines) ==="
          tail -n 20 daily_reports/report_$(date +%Y%m%d).txt
        else
          echo "❌ Report file not created!"
          exit 1
        fi
    
    - name: Check for import errors
      run: |
        # インポートエラーがないか確認
        if grep -q "ImportError\\|ModuleNotFoundError" daily_reports/report_$(date +%Y%m%d).txt; then
          echo "⚠️ Import errors detected in report:"
          grep -A 2 -B 2 "ImportError\\|ModuleNotFoundError" daily_reports/report_$(date +%Y%m%d).txt
        fi
    
    - name: Upload reports and logs
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: mlb-reports-${{ github.run_number }}
        path: |
          daily_reports/
          logs/
          mlb_report.log
    
    - name: Create summary
      if: always()
      run: |
        echo "## 📊 MLB Daily Report Generation" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📅 Report Information" >> $GITHUB_STEP_SUMMARY
        echo "- **Date**: $(date +%Y-%m-%d %H:%M:%S UTC)" >> $GITHUB_STEP_SUMMARY
        echo "- **Japan Time**: $(TZ=Asia/Tokyo date +%Y-%m-%d %H:%M:%S JST)" >> $GITHUB_STEP_SUMMARY
        echo "- **Report File**: daily_reports/report_$(date +%Y%m%d).txt" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ -f daily_reports/report_$(date +%Y%m%d).txt ]; then
          echo "### ✅ Status: Success" >> $GITHUB_STEP_SUMMARY
          echo "- **Lines**: $(wc -l < daily_reports/report_$(date +%Y%m%d).txt)" >> $GITHUB_STEP_SUMMARY
          echo "- **Size**: $(du -h daily_reports/report_$(date +%Y%m%d).txt | cut -f1)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📝 Report Preview" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          head -n 30 daily_reports/report_$(date +%Y%m%d).txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        else
          echo "### ❌ Status: Failed" >> $GITHUB_STEP_SUMMARY
          echo "Report file was not generated." >> $GITHUB_STEP_SUMMARY
        fi